{"version":3,"sources":["assets/headshot.png","store/index.ts","serviceWorker.ts","configs/resume-structure.ts","components/PersonalInfo.tsx","components/DateRange.tsx","components/SectionHeading.tsx","components/Projects.tsx","components/Experiences.tsx","components/Education.tsx","components/Skills.tsx","components/Languages.tsx","components/App.tsx","theme/index.ts","index.tsx"],"names":["module","exports","store","configureStore","reducer","Boolean","window","location","hostname","match","fullName","jobStatus","avatarPic","contact","mobile","email","address","github","linkedIn","title","company","dateRange","aboutCompany","summary","actions","institution","achievements","grade","group","list","name","proficiency","Resume","contactIcons","CallIcon","EmailIcon","HomeIcon","LinkedInIcon","GitHubIcon","useStyles","makeStyles","theme","createStyles","avatar","width","spacing","height","contactInfo","wordBreak","smallIcon","fontSize","PersonalInfo","classes","ContactInfo","Object","entries","map","k","v","Grid","item","xs","md","container","className","key","Icon","color","style","marginRight","renderIcon","Typography","variant","display","Box","clone","order","sm","gutterBottom","fontWeight","alignItems","justify","Avatar","alt","src","DateRange","range","heading","textTransform","divider","backgroundColor","palette","common","black","SectionHeading","children","Divider","projects","noPadding","padding","projBlock","margin","Projects","experiences","Experiences","List","dense","action","i","ListItem","ListItemIcon","minWidth","ListItemText","primary","education","eduBlock","Education","orientation","flexItem","skills","chipRoot","justifyContent","flexWrap","Skills","direction","skill","Chip","onClick","label","languages","Languages","app","background","paper","borderStyle","borderWidth","breakpoints","down","fab","position","float","top","App","fileUrl","process","CssBaseline","Fab","aria-label","href","download","Container","maxWidth","marginBottom","component","m","p","createMuiTheme","main","secondary","typography","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b6e67549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.bd328fd2.png\";","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // counter: counterReducer\r\n  }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  personalInfo: {\r\n    fullName: 'Madhusoodhanan KM',\r\n    jobStatus: 'Full Stack Developer', // Can also be the post you are looking for\r\n    avatarPic: 'URL',\r\n    contact: {\r\n      mobile: '+91-9738575801',\r\n      email: 'madhukm3141@gmail.com',\r\n      address: 'Bengaluru, Karnataka, India',\r\n      github: 'github.com/gammaSpeck',\r\n      linkedIn: 'linkedin.com/in/madhusoodhanan-km'\r\n    }\r\n  },\r\n  experiences: [\r\n    {\r\n      title: 'Associate Software Engineer',\r\n      company: 'mscripts',\r\n      location: 'Bengaluru, India',\r\n      dateRange: '01/2019 - Ongoing',\r\n      aboutCompany:\r\n        'Healthcare providers in the US use mscripts to communicate digitally with patients about their health.',\r\n      summary: {\r\n        title: 'Responsibilities',\r\n        actions: [\r\n          `Built architectural frameworks in NodeJS and React.js for the company. Frameworks which helps the company's major tech-stack to shift from Java and Angular 1.6 to newer, relavent technologies.`,\r\n          `Built micro-services with the serverless framework.`,\r\n          `Integrate internally-developed micro-services, as well as marketplace 3rd party modules into our projects.`,\r\n          `Admin Console: Designed and built the MVP and launched beta; It is an administrative tool used by each one of our clients and our support teams.`,\r\n          `Used Scrum Agile Methodology in my work (Daily Scrum Meetings, Planning Poker, Sprint Backlog, 1on1 meetings.`\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  education: [\r\n    {\r\n      title: 'Bachelors in CS Engineering',\r\n      institution: 'CMRIT',\r\n      location: 'Bengaluru, India',\r\n      dateRange: '2015-2019',\r\n      achievements: ['', ''],\r\n      grade: '7.3 / 10' // CGPA\r\n    },\r\n    {\r\n      title: 'PUC - PCMB',\r\n      institution: 'Christ Junior College',\r\n      location: 'Bengaluru, India',\r\n      dateRange: '2013-2015',\r\n      achievements: [],\r\n      grade: '84%'\r\n    },\r\n    {\r\n      title: 'Secondary Education',\r\n      institution: 'St Thomas Public School',\r\n      location: 'Bengaluru, India',\r\n      dateRange: '2015',\r\n      achievements: [],\r\n      grade: '84%'\r\n    }\r\n  ],\r\n  projects: [\r\n    {\r\n      title: 'Intelligent Intrusion Alerting',\r\n      dateRange: '03/2019',\r\n      location: 'Coimbatore, India', // Optional\r\n      summary: 'A smart system that photographs, identifies and alerts using ML and Image Processing.'\r\n    },\r\n    {\r\n      title: 'IoT Railway Gate Control',\r\n      dateRange: '02/0217',\r\n      location: 'Udaipur, India', // Optional\r\n      summary:\r\n        'A multi-tier IoT system that senses train movements, and automatically closes the railway crossing gate.'\r\n    }\r\n  ],\r\n  skills: [\r\n    { group: 'Coding languages', list: ['Javascript', 'Typescript', 'Shell', 'Python'] },\r\n    {\r\n      group: 'Backend',\r\n      list: ['Node', 'Express', 'AWS', 'Serverless', 'Kubernetes', 'Terraform', 'MySQL', 'MongoDB', 'Redis']\r\n    },\r\n    {\r\n      group: 'Frontend',\r\n      list: ['React', 'Redux', 'Thunk', 'MUI', 'Bootstrap4', 'AntUI', 'SASS', 'Less', 'Webpack4', 'Babel']\r\n    },\r\n    {\r\n      group: 'Testing frameworks',\r\n      list: ['Jest', 'Mocha', 'Swagger.io', 'Postman']\r\n    }\r\n  ],\r\n  socialProfiles: [{ name: 'GitHub', link: 'https://github.com/gammaSpeck' }],\r\n  languages: [\r\n    { name: 'English', proficiency: 'Advanced' },\r\n    { name: 'Hindi', proficiency: 'Proficient' },\r\n    { name: 'Tamil', proficiency: 'Intermediate' },\r\n    { name: 'Malayalam', proficiency: 'Intermediate' }\r\n  ]\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport Resume from '../configs/resume-structure'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport CallIcon from '@material-ui/icons/Call'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { makeStyles, Theme, createStyles, Avatar } from '@material-ui/core'\r\nimport avatar from '../assets/headshot.png'\r\n\r\nconst {\r\n  personalInfo: { fullName, jobStatus, contact }\r\n} = Resume\r\n\r\nconst contactIcons = {\r\n  mobile: CallIcon,\r\n  email: EmailIcon,\r\n  address: HomeIcon,\r\n  linkedIn: LinkedInIcon,\r\n  github: GitHubIcon\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    avatar: {\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20)\r\n    },\r\n    contactInfo: {\r\n      wordBreak: 'break-all'\r\n    },\r\n    smallIcon: { fontSize: '1rem' }\r\n  })\r\n)\r\n\r\ntype TKeyType = 'mobile' | 'email' | 'address' | 'linkedIn' | 'github'\r\n\r\nconst renderIcon = (key: TKeyType) => {\r\n  const Icon = contactIcons[key]\r\n  return <Icon color='primary' style={{ fontSize: '1rem', marginRight: '.25rem' }} />\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const classes = useStyles()\r\n\r\n  const ContactInfo = Object.entries(contact).map(([k, v]) => (\r\n    <Grid item xs={12} md={6} container className={classes.contactInfo} key={k}>\r\n      {renderIcon(k as TKeyType)}\r\n      <Typography variant='caption' display='inline'>\r\n        {v}\r\n      </Typography>\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      <Box clone order={{ xs: 2, sm: 1 }}>\r\n        <Grid item xs={12} sm={7}>\r\n          <Typography variant='h3' gutterBottom>\r\n            {fullName}\r\n          </Typography>\r\n          <Typography variant='h5' gutterBottom color='primary' style={{ fontWeight: 'bold' }}>\r\n            {jobStatus}\r\n          </Typography>\r\n          <Grid container item xs={12} alignItems='flex-end' spacing={1}>\r\n            {ContactInfo}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box clone order={{ xs: 1, sm: 2 }}>\r\n        <Grid item xs={12} sm={5} container justify='center' alignItems='center'>\r\n          <Grid item>\r\n            <Avatar alt='Madhu KM' src={avatar} className={classes.avatar} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\r\nimport DateRangeIcon from '@material-ui/icons/DateRange'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\r\n\r\ninterface IDateRange {\r\n  range: string\r\n  location?: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    smallIcon: { fontSize: '1rem' }\r\n  })\r\n)\r\n\r\nconst DateRange = ({ range, location }: IDateRange) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <DateRangeIcon color='primary' className={classes.smallIcon} />\r\n      <Typography variant='caption' display='inline'>\r\n        {range}\r\n      </Typography>\r\n      {!!location && (\r\n        <>\r\n          &nbsp; &nbsp;\r\n          <LocationOnIcon color='primary' className={classes.smallIcon} />\r\n          <Typography variant='caption' display='inline'>\r\n            {location}\r\n          </Typography>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DateRange\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    heading: {\r\n      textTransform: 'uppercase',\r\n      fontWeight: 'bold'\r\n    },\r\n    divider: {\r\n      height: theme.spacing(0.5),\r\n      backgroundColor: theme.palette.common.black\r\n    }\r\n  })\r\n)\r\n\r\nconst SectionHeading = ({ children }: any) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h5' gutterBottom className={classes.heading}>\r\n        {children}\r\n      </Typography>\r\n      <Divider className={classes.divider} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SectionHeading\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\r\n\r\nimport Resume from '../configs/resume-structure'\r\nimport DateRange from './DateRange'\r\nimport SectionHeading from './SectionHeading'\r\n\r\nconst { projects } = Resume\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    noPadding: { padding: 0 },\r\n    projBlock: {\r\n      margin: theme.spacing(0, 0, 1, 0)\r\n    }\r\n  })\r\n)\r\n\r\nconst Projects = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <SectionHeading>Projects</SectionHeading>\r\n      <Grid container>\r\n        {projects.map(({ title, dateRange, location, summary }) => (\r\n          <Grid container key={title} className={classes.projBlock}>\r\n            <Grid item>\r\n              <Typography variant='h6'>{title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} container>\r\n              <DateRange range={dateRange} location={location} />\r\n            </Grid>\r\n            <Grid item xs={12} container alignItems='center'>\r\n              <Typography variant='body1'>{summary}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { ListItem, ListItemText, List, ListItemIcon, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport BulletIcon from '@material-ui/icons/FiberManualRecord'\r\n\r\nimport DateRange from './DateRange'\r\nimport SectionHeading from './SectionHeading'\r\nimport Resume from '../configs/resume-structure'\r\nconst { experiences } = Resume\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    smallIcon: { fontSize: '0.75rem', color: theme.palette.common.black },\r\n    noPadding: { padding: 0 }\r\n  })\r\n)\r\n\r\nconst Experiences = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      <SectionHeading>Experience</SectionHeading>\r\n      {experiences.map(({ title, company, dateRange, location, aboutCompany, summary }) => (\r\n        <Grid container spacing={0} key={title}>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h6'>{title}</Typography>\r\n            <Typography variant='subtitle2'>{company}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} container>\r\n            <DateRange range={dateRange} location={location} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='body1' gutterBottom>\r\n              {aboutCompany}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='body1'>{summary.title}</Typography>\r\n            <List dense>\r\n              {summary.actions.map((action: string, i: number) => (\r\n                <ListItem className={classes.noPadding} key={i}>\r\n                  <ListItemIcon style={{ minWidth: '1.2rem' }}>\r\n                    <BulletIcon color='disabled' className={classes.smallIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={action} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Experiences\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Divider, makeStyles, Theme, createStyles } from '@material-ui/core'\r\n\r\nimport Resume from '../configs/resume-structure'\r\nimport DateRange from './DateRange'\r\nimport SectionHeading from './SectionHeading'\r\n\r\nconst { education } = Resume\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    smallIcon: { fontSize: '1rem' },\r\n    noPadding: { padding: 0 },\r\n    divider: {\r\n      margin: theme.spacing(0, 3)\r\n    },\r\n    grade: {\r\n      wordBreak: 'break-all'\r\n    },\r\n    eduBlock: {\r\n      margin: theme.spacing(0, 0, 1, 0)\r\n    }\r\n  })\r\n)\r\n\r\nconst Education = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <SectionHeading>Education</SectionHeading>\r\n      {education.map(({ title, institution, location, dateRange, achievements, grade }) => (\r\n        <Grid container key={title} alignItems='center' justify='space-between' className={classes.eduBlock}>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h6'>{title}</Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Typography variant='body1'>{institution}</Typography>\r\n            <Grid item xs={12} container>\r\n              <DateRange range={dateRange} />\r\n            </Grid>\r\n          </Grid>\r\n          <Divider orientation='vertical' flexItem className={classes.divider} />\r\n          <Grid item xs={5}>\r\n            <Typography variant='caption'>{grade}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles, Theme, createStyles, Chip } from '@material-ui/core'\r\n\r\nimport Resume from '../configs/resume-structure'\r\nimport SectionHeading from './SectionHeading'\r\nconst { skills } = Resume\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chipRoot: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-start',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5)\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nconst Skills = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <SectionHeading>Skills</SectionHeading>\r\n      <Grid container direction='column' spacing={1}>\r\n        {skills.map((skill) => (\r\n          <Grid item key={skill.group}>\r\n            <Typography variant='h6' color='primary'>\r\n              {skill.group}\r\n            </Typography>\r\n            <div className={classes.chipRoot}>\r\n              {skill.list.map((item) => (\r\n                <Chip onClick={() => null} label={item} key={item} />\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Resume from '../configs/resume-structure'\r\nimport SectionHeading from './SectionHeading'\r\nconst { languages } = Resume\r\n\r\nconst Languages = () => {\r\n  return (\r\n    <div>\r\n      <SectionHeading>Languages</SectionHeading>\r\n      <Grid container spacing={2}>\r\n        {languages.map(({ name, proficiency }) => (\r\n          <Grid item xs={6} key={name}>\r\n            <Typography variant='body1'>\r\n              <strong>{name}</strong> - {proficiency}\r\n            </Typography>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Languages\r\n","import React from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles, Theme, createStyles, Box, Fab } from '@material-ui/core'\r\nimport PersonalInfo from './PersonalInfo'\r\nimport Projects from './Projects'\r\nimport Experiences from './Experiences'\r\nimport Education from './Education'\r\nimport Skills from './Skills'\r\nimport Languages from './Languages'\r\nimport GetAppIcon from '@material-ui/icons/GetApp'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    app: {\r\n      backgroundColor: 'lightgrey'\r\n    },\r\n    container: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderStyle: 'solid',\r\n      borderWidth: theme.spacing(0.1),\r\n      padding: '3rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n        padding: '2rem'\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: '1rem'\r\n      }\r\n    },\r\n    fab: {\r\n      margin: theme.spacing(2),\r\n      position: 'relative',\r\n      float: 'right',\r\n      top: '50%'\r\n    }\r\n  })\r\n)\r\n\r\nconst App = () => {\r\n  const classes = useStyles()\r\n  const fileUrl = `${process.env.PUBLIC_URL}/madhu_km.pdf`\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <CssBaseline />\r\n      <Fab color='primary' aria-label='download' className={classes.fab} href={fileUrl} download>\r\n        <GetAppIcon />\r\n      </Fab>\r\n      <Container maxWidth='md' className={classes.container}>\r\n        <Grid container justify='space-between' spacing={3} style={{ marginBottom: '1rem' }}>\r\n          <PersonalInfo />\r\n        </Grid>\r\n        <Grid container justify='space-between' spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box component='span' m={1} p={1}>\r\n              <Grid container direction='column' spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Experiences />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Education />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box component='span' m={1} p={1}>\r\n              <Grid container direction='column' spacing={3}>\r\n                <Grid item>\r\n                  <Projects />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Skills />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Languages />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#008CFF' },\r\n    secondary: { main: '#fcba03' }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(',')\r\n  }\r\n})\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { store } from './store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './components/App'\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport theme from './theme'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}