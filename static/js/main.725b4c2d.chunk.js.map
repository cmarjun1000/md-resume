{"version":3,"sources":["configs/index.ts","store/index.ts","configs/resume-structure.ts","serviceWorker.ts","components/PersonalInfo.tsx","components/DateRange.tsx","components/SectionHeading.tsx","components/Projects.tsx","components/Experiences.tsx","components/Education.tsx","components/Skills.tsx","components/Languages.tsx","components/BackdropLoader.tsx","components/App.tsx","theme/index.ts","index.tsx","assets/avatar.png"],"names":["config","resumePublicURL","process","RESUME_PUBLIC_URL","publicURL","getResume","createAsyncThunk","_","a","rejectWithValue","Axios","get","configs","data","response","initialState","isLoading","resume","personalInfo","fullName","jobStatus","avatarPic","contact","mobile","email","address","github","linkedIn","experiences","title","company","location","dateRange","aboutCompany","summary","actions","education","institution","achievements","grade","projects","skills","group","list","languages","name","proficiency","socialProfiles","link","AppStore","createSlice","reducers","extraReducers","builder","addCase","fulfilled","state","payload","rejected","console","error","store","configureStore","reducer","app","Boolean","window","hostname","match","contactIcons","CallIcon","EmailIcon","HomeIcon","LinkedInIcon","GitHubIcon","useStyles","makeStyles","theme","createStyles","bold","fontWeight","avatar","width","spacing","height","contactInfo","wordBreak","smallIcon","fontSize","PersonalInfo","classes","useSelector","ContactInfo","Object","entries","map","k","v","Grid","item","xs","md","container","className","key","Icon","color","style","marginRight","renderIcon","Typography","variant","display","Box","clone","order","sm","gutterBottom","alignItems","justify","Avatar","alt","src","DateRange","range","heading","textTransform","divider","backgroundColor","palette","common","black","SectionHeading","children","Divider","noPadding","padding","projBlock","margin","Projects","Experiences","List","dense","action","i","ListItem","ListItemIcon","minWidth","ListItemText","primary","eduBlock","Education","orientation","flexItem","chipRoot","justifyContent","flexWrap","Skills","direction","skill","Chip","onClick","label","Languages","backdrop","zIndex","drawer","BackdropLoader","Backdrop","open","CircularProgress","background","paper","borderStyle","borderWidth","breakpoints","down","fab","position","float","top","App","dispatch","useDispatch","fileUrl","useEffect","CssBaseline","Fab","aria-label","href","download","Container","maxWidth","marginBottom","component","m","p","createMuiTheme","main","secondary","typography","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.725b4c2d.chunk.js","sourcesContent":["const config = () => {\n  return {\n    resumePublicURL:\n      process.env.RESUME_PUBLIC_URL ||\n      'https://raw.githubusercontent.com/gammaSpeck/md-resume/master/public/resume.json',\n    publicURL: process.env.PUBLIC_URL || 'http://localhost:3000'\n  }\n}\nexport default config()\n","import { configureStore, ThunkAction, Action, createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport Axios from 'axios'\nimport configs from '../configs'\nimport InitialResume from '../configs/resume-structure'\nimport { IInitialState, IResume } from './IStore'\n\nexport const getResume = createAsyncThunk('appStore/getResume', async (_, { rejectWithValue }) => {\n  try {\n    const { data } = await Axios.get(configs.resumePublicURL)\n    return data\n  } catch (err) {\n    const { response } = err\n    if (!response) {\n      throw err\n    }\n    return rejectWithValue(response)\n  }\n})\n\nconst initialState: IInitialState = {\n  isLoading: true,\n  resume: InitialResume\n}\n\nconst AppStore = createSlice({\n  name: 'appStore',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getResume.fulfilled, (state, { payload }: { payload: IResume }) => {\n      state.resume = payload\n      state.isLoading = false\n    })\n    builder.addCase(getResume.rejected, (state, { payload }) => {\n      console.error('Latest Resume could not be fetched', payload)\n      state.isLoading = false\n    })\n  }\n})\n\n// export const {} = AppStore.actions\n\nexport const store = configureStore({\n  reducer: {\n    app: AppStore.reducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\n","export default {\n  personalInfo: {\n    fullName: 'Madhusoodhanan KM',\n    jobStatus: 'Full Stack Developer', // Can also be the post you are looking for\n    avatarPic: 'URL',\n    contact: {\n      mobile: '+91-9738575801',\n      email: 'madhukm3141@gmail.com',\n      address: 'Bengaluru, Karnataka, India',\n      github: 'github.com/gammaSpeck',\n      linkedIn: 'linkedin.com/in/madhusoodhanan-km'\n    }\n  },\n  experiences: [\n    {\n      title: 'Associate Software Engineer',\n      company: 'mscripts',\n      location: 'Bengaluru, India',\n      dateRange: '01/2019 - Ongoing',\n      aboutCompany:\n        'Healthcare providers in the US use mscripts to communicate digitally with patients about their health.',\n      summary: {\n        title: 'Responsibilities',\n        actions: [\n          `Built architectural frameworks in NodeJS and React.js for the company. Frameworks which helps the company's major tech-stack to shift from Java and Angular 1.6 to newer, relevant technologies.`,\n          `Built micro-services with the serverless framework.`,\n          `Integrate internally-developed micro-services, as well as marketplace 3rd party modules into our projects.`,\n          `Admin Console: Designed and built the MVP and launched beta; It is an administrative tool used by each one of our clients and our support teams.`,\n          `Used Scrum Agile Methodology in my work (Daily Scrum Meetings, Planning Poker, Sprint Backlog, 1on1 meetings.`\n        ]\n      }\n    }\n  ],\n  education: [\n    {\n      title: 'Bachelors in CS Engineering',\n      institution: 'CMRIT',\n      location: 'Bengaluru, India',\n      dateRange: '2015-2019',\n      achievements: ['', ''],\n      grade: '7.3 / 10' // CGPA\n    },\n    {\n      title: 'PUC - PCMB',\n      institution: 'Christ Junior College',\n      location: 'Bengaluru, India',\n      dateRange: '2013-2015',\n      achievements: [],\n      grade: '84%'\n    },\n    {\n      title: 'Secondary Education',\n      institution: 'St Thomas Public School',\n      location: 'Bengaluru, India',\n      dateRange: '2015',\n      achievements: [],\n      grade: '84%'\n    }\n  ],\n  projects: [\n    {\n      title: 'Intelligent Intrusion Alerting',\n      dateRange: '03/2019',\n      location: 'Coimbatore, India', // Optional\n      summary: 'A smart system that photographs, identifies and alerts using ML and Image Processing.'\n    },\n    {\n      title: 'IoT Railway Gate Control',\n      dateRange: '02/0217',\n      location: 'Udaipur, India', // Optional\n      summary:\n        'A multi-tier IoT system that senses train movements, and automatically closes the railway crossing gate.'\n    }\n  ],\n  skills: [\n    { group: 'Coding languages', list: ['Javascript', 'Typescript', 'Shell', 'Python'] },\n    {\n      group: 'Backend',\n      list: ['Node', 'Express', 'AWS', 'Serverless', 'Jenkins', 'Kubernetes', 'Terraform', 'MySQL', 'Redis', 'MongoDB']\n    },\n    {\n      group: 'Frontend',\n      list: ['React', 'Redux', 'Next JS', 'MUI', 'Bootstrap4', 'SASS', 'Less', 'Webpack4', 'Babel']\n    },\n    {\n      group: 'Testing frameworks',\n      list: ['Jest', 'Mocha', 'Swagger.io', 'Postman']\n    }\n  ],\n  languages: [\n    { name: 'English', proficiency: 'Advanced' },\n    { name: 'Hindi', proficiency: 'Proficient' },\n    { name: 'Tamil', proficiency: 'Intermediate' },\n    { name: 'Malayalam', proficiency: 'Intermediate' }\n  ],\n  socialProfiles: [{ name: 'GitHub', link: 'https://github.com/gammaSpeck' }]\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport EmailIcon from '@material-ui/icons/Email'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CallIcon from '@material-ui/icons/Call'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { makeStyles, Theme, createStyles, Avatar } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nimport avatar from '../assets/avatar.png'\n\nconst contactIcons = {\n  mobile: CallIcon,\n  email: EmailIcon,\n  address: HomeIcon,\n  linkedIn: LinkedInIcon,\n  github: GitHubIcon\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bold: { fontWeight: 'bold' },\n    avatar: {\n      width: theme.spacing(20),\n      height: theme.spacing(20)\n    },\n    contactInfo: {\n      wordBreak: 'break-all'\n    },\n    smallIcon: { fontSize: '1rem' }\n  })\n)\n\ntype TKeyType = 'mobile' | 'email' | 'address' | 'linkedIn' | 'github'\n\nconst renderIcon = (key: TKeyType) => {\n  const Icon = contactIcons[key]\n  return <Icon color='primary' style={{ fontSize: '1rem', marginRight: '.25rem' }} />\n}\n\nconst PersonalInfo = () => {\n  const classes = useStyles()\n  const { fullName, jobStatus, contact } = useSelector((state: RootState) => state.app.resume.personalInfo)\n\n  const ContactInfo = Object.entries(contact).map(([k, v]) => (\n    <Grid item xs={12} md={6} container className={classes.contactInfo} key={k}>\n      {renderIcon(k as TKeyType)}\n      <Typography variant='caption' display='inline'>\n        {v}\n      </Typography>\n    </Grid>\n  ))\n\n  return (\n    <>\n      <Box clone order={{ xs: 2, sm: 1 }}>\n        <Grid item xs={12} sm={7}>\n          <Typography variant='h4' gutterBottom className={classes.bold}>\n            {fullName}\n          </Typography>\n          <Typography variant='h5' gutterBottom color='primary' className={classes.bold}>\n            {jobStatus}\n          </Typography>\n          <Grid container item xs={12} alignItems='flex-end' spacing={1}>\n            {ContactInfo}\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box clone order={{ xs: 1, sm: 2 }}>\n        <Grid item xs={12} sm={5} container justify='center' alignItems='center'>\n          <Grid item>\n            <Avatar alt='Madhu KM' src={avatar} className={classes.avatar} />\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default PersonalInfo\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport DateRangeIcon from '@material-ui/icons/DateRange'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\n\ninterface IDateRange {\n  range: string\n  location?: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    smallIcon: { fontSize: '1rem' }\n  })\n)\n\nconst DateRange = ({ range, location }: IDateRange) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <DateRangeIcon color='primary' className={classes.smallIcon} />\n      <Typography variant='caption' display='inline'>\n        {range}\n      </Typography>\n      {!!location && (\n        <>\n          &nbsp; &nbsp;\n          <LocationOnIcon color='primary' className={classes.smallIcon} />\n          <Typography variant='caption' display='inline'>\n            {location}\n          </Typography>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default DateRange\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      textTransform: 'uppercase',\n      fontWeight: 'bold'\n    },\n    divider: {\n      height: theme.spacing(0.5),\n      backgroundColor: theme.palette.common.black\n    }\n  })\n)\n\nconst SectionHeading = ({ children }: any) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Typography variant='h5' gutterBottom className={classes.heading}>\n        {children}\n      </Typography>\n      <Divider className={classes.divider} />\n    </>\n  )\n}\n\nexport default SectionHeading\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\n\nimport DateRange from './DateRange'\nimport SectionHeading from './SectionHeading'\nimport { RootState } from '../store'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    noPadding: { padding: 0 },\n    projBlock: {\n      margin: theme.spacing(0, 0, 1, 0)\n    }\n  })\n)\n\nconst Projects = () => {\n  const classes = useStyles()\n  const { projects } = useSelector((state: RootState) => state.app.resume)\n\n  return (\n    <>\n      <SectionHeading>Projects</SectionHeading>\n      <Grid container>\n        {projects.map(({ title, dateRange, location, summary }) => (\n          <Grid container key={title} className={classes.projBlock}>\n            <Grid item>\n              <Typography variant='h6'>{title}</Typography>\n            </Grid>\n            <Grid item xs={12} container>\n              <DateRange range={dateRange} location={location} />\n            </Grid>\n            <Grid item xs={12} container alignItems='center'>\n              <Typography variant='body1'>{summary}</Typography>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n\nexport default Projects\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { ListItem, ListItemText, List, ListItemIcon, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport BulletIcon from '@material-ui/icons/FiberManualRecord'\nimport { useSelector } from 'react-redux'\n\nimport DateRange from './DateRange'\nimport SectionHeading from './SectionHeading'\nimport { RootState } from '../store'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    smallIcon: { fontSize: '0.75rem', color: theme.palette.common.black },\n    noPadding: { padding: 0 }\n  })\n)\n\nconst Experiences = () => {\n  const classes = useStyles()\n  const { experiences } = useSelector((state: RootState) => state.app.resume)\n\n  return (\n    <>\n      <SectionHeading>Experience</SectionHeading>\n      {experiences.map(({ title, company, dateRange, location, aboutCompany, summary }) => (\n        <Grid container spacing={0} key={title}>\n          <Grid item xs={12}>\n            <Typography variant='h6'>{title}</Typography>\n            <Typography variant='subtitle2'>{company}</Typography>\n          </Grid>\n          <Grid item xs={12} container>\n            <DateRange range={dateRange} location={location} />\n          </Grid>\n          <Grid item>\n            <Typography variant='body1' gutterBottom>\n              {aboutCompany}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant='body1'>{summary.title}</Typography>\n            <List dense>\n              {summary.actions.map((action: string, i: number) => (\n                <ListItem className={classes.noPadding} key={i}>\n                  <ListItemIcon style={{ minWidth: '1.2rem' }}>\n                    <BulletIcon color='disabled' className={classes.smallIcon} />\n                  </ListItemIcon>\n                  <ListItemText primary={action} />\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      ))}\n    </>\n  )\n}\n\nexport default Experiences\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Divider, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\n\nimport DateRange from './DateRange'\nimport SectionHeading from './SectionHeading'\nimport { RootState } from '../store'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    smallIcon: { fontSize: '1rem' },\n    noPadding: { padding: 0 },\n    divider: {\n      margin: theme.spacing(0, 3)\n    },\n    grade: {\n      wordBreak: 'break-all'\n    },\n    eduBlock: {\n      margin: theme.spacing(0, 0, 1, 0)\n    }\n  })\n)\n\nconst Education = () => {\n  const classes = useStyles()\n  const { education } = useSelector((state: RootState) => state.app.resume)\n\n  return (\n    <>\n      <SectionHeading>Education</SectionHeading>\n      {education.map(({ title, institution, location, dateRange, achievements, grade }) => (\n        <Grid container key={title} alignItems='center' justify='space-between' className={classes.eduBlock}>\n          <Grid item xs={12}>\n            <Typography variant='h6'>{title}</Typography>\n          </Grid>\n          <Grid item xs={5}>\n            <Typography variant='body1'>{institution}</Typography>\n            <Grid item xs={12} container>\n              <DateRange range={dateRange} />\n            </Grid>\n          </Grid>\n          <Divider orientation='vertical' flexItem className={classes.divider} />\n          <Grid item xs={5}>\n            <Typography variant='caption'>{grade}</Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </>\n  )\n}\n\nexport default Education\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles, Theme, createStyles, Chip } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\n\nimport SectionHeading from './SectionHeading'\nimport { RootState } from '../store'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    chipRoot: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    }\n  })\n)\n\nconst Skills = () => {\n  const classes = useStyles()\n  const { skills } = useSelector((state: RootState) => state.app.resume)\n\n  return (\n    <div>\n      <SectionHeading>Skills</SectionHeading>\n      <Grid container direction='column' spacing={1}>\n        {skills.map((skill) => (\n          <Grid item key={skill.group}>\n            <Typography variant='h6' color='primary'>\n              {skill.group}\n            </Typography>\n            <div className={classes.chipRoot}>\n              {skill.list.map((item) => (\n                <Chip onClick={() => null} label={item} key={item} />\n              ))}\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { useSelector } from 'react-redux'\n\nimport SectionHeading from './SectionHeading'\nimport { RootState } from '../store'\n\nconst Languages = () => {\n  const { languages } = useSelector((state: RootState) => state.app.resume)\n\n  return (\n    <div>\n      <SectionHeading>Languages</SectionHeading>\n      <Grid container spacing={2}>\n        {languages.map(({ name, proficiency }) => (\n          <Grid item xs={6} key={name}>\n            <Typography variant='body1'>\n              <strong>{name}</strong> - {proficiency}\n            </Typography>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Languages\n","import React from 'react'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff'\n    }\n  })\n)\n\nconst BackdropLoader = () => {\n  const classes = useStyles()\n  const { isLoading } = useSelector((state: RootState) => state.app)\n\n  return (\n    <Backdrop className={classes.backdrop} open={isLoading}>\n      <CircularProgress color='inherit' />\n    </Backdrop>\n  )\n}\n\nexport default BackdropLoader\n","import React, { useEffect } from 'react'\nimport Container from '@material-ui/core/Container'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles, Theme, createStyles, Box, Fab } from '@material-ui/core'\nimport PersonalInfo from './PersonalInfo'\nimport Projects from './Projects'\nimport Experiences from './Experiences'\nimport Education from './Education'\nimport Skills from './Skills'\nimport Languages from './Languages'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { useDispatch } from 'react-redux'\nimport configs from '../configs'\nimport { getResume } from '../store'\nimport BackdropLoader from './BackdropLoader'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      backgroundColor: 'lightgrey'\n    },\n    container: {\n      backgroundColor: theme.palette.background.paper,\n      borderStyle: 'solid',\n      borderWidth: theme.spacing(0.1),\n      padding: '3rem',\n      [theme.breakpoints.down('sm')]: {\n        padding: '2rem'\n      },\n      [theme.breakpoints.down('xs')]: {\n        padding: '1rem'\n      }\n    },\n    fab: {\n      margin: theme.spacing(2),\n      position: 'relative',\n      float: 'right',\n      top: '50%'\n    }\n  })\n)\n\nconst App = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const fileUrl = `${configs.publicURL}/resume.pdf`\n\n  useEffect(() => {\n    dispatch(getResume())\n  }, [dispatch])\n\n  return (\n    <div className={classes.app}>\n      <CssBaseline />\n      <BackdropLoader />\n      <Fab color='primary' aria-label='download' className={classes.fab} href={fileUrl} download>\n        <GetAppIcon />\n      </Fab>\n      <Container maxWidth='md' className={classes.container}>\n        <Grid container justify='space-between' spacing={3} style={{ marginBottom: '1rem' }}>\n          <PersonalInfo />\n        </Grid>\n        <Grid container justify='space-between' spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Box component='span' m={1} p={1}>\n              <Grid container direction='column' spacing={3}>\n                <Grid item xs={12}>\n                  <Experiences />\n                </Grid>\n                <Grid item xs={12}>\n                  <Education />\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Box component='span' m={1} p={1}>\n              <Grid container direction='column' spacing={3}>\n                <Grid item>\n                  <Projects />\n                </Grid>\n                <Grid item>\n                  <Skills />\n                </Grid>\n                <Grid item>\n                  <Languages />\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import { createMuiTheme } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#008CFF' },\n    secondary: { main: '#fcba03' }\n  },\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(',')\n  }\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { store } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport App from './components/App'\nimport { ThemeProvider } from '@material-ui/core'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/avatar.bd328fd2.png\";"],"sourceRoot":""}